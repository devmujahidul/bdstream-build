const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/vidstack-BeT6vBOi-Du3TsHI_.js","assets/main-CDfoRFto.js","assets/mui-Du5OpAyb.js","assets/vendor-I5pfZzyJ.js","assets/router-C70wdWFB.js","assets/main-DDo056iP.css"])))=>i.map(i=>d[i]);
var t,e,a,r,o,s,i,n=Object.defineProperty,c=t=>{throw TypeError(t)},l=(t,e,a)=>((t,e,a)=>e in t?n(t,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[e]=a)(t,"symbol"!=typeof e?e+"":e,a),d=(t,e,a)=>e.has(t)||c("Cannot "+a),p=(t,e,a)=>(d(t,e,"read from private field"),a?a.call(t):e.get(t)),h=(t,e,a)=>e.has(t)?c("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(t):e.set(t,a),u=(t,e,a)=>(d(t,e,"access private method"),a);import{l as g,I as m,y as v,z as f,c as w,x as y,_ as C,j as E}from"./main-CDfoRFto.js";import"./mui-Du5OpAyb.js";import"./vendor-I5pfZzyJ.js";import"./router-C70wdWFB.js";function _(){return P().getCastState()===cast.framework.CastState.CONNECTED}function P(){return window.cast.framework.CastContext.getInstance()}function b(){return P().getCurrentSession()}function k(){var t;return null==(t=b())?void 0:t.getSessionObj().media[0]}function I(t){var e;return(null==(e=k())?void 0:e.media.contentId)===(null==t?void 0:t.src)}function S(t){return`Google Cast Error Code: ${t}`}function j(t,e){return g(P(),t,e)}t=new WeakMap,e=new WeakSet,a=async function(t){if(null==(a=window.cast)?void 0:a.framework)return;var a;const r=t.player.createEvent("google-cast-load-start");t.player.dispatch(r),await E("https://www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1"),await customElements.whenDefined("google-cast-launcher");const o=t.player.createEvent("google-cast-loaded",{trigger:r});if(t.player.dispatch(o),!function(){var t,e;return!!(null==(e=null==(t=window.chrome)?void 0:t.cast)?void 0:e.isAvailable)}())throw u(this,e,i).call(this,"CAST_NOT_AVAILABLE","Google Cast not available on this platform.");return o},r=async function(t){u(this,e,o).call(this,t);const a=await this.cast.requestSession();if(a)throw u(this,e,i).call(this,a.toUpperCase(),S(a))},o=function(t){var e;null==(e=this.cast)||e.setOptions({language:"en-US",autoJoinPolicy:chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED,receiverApplicationId:chrome.cast.media.DEFAULT_MEDIA_RECEIVER_APP_ID,resumeSavedSession:!0,androidReceiverCompatible:!0,...t})},s=function(t,e,a){const r={type:"google-cast",state:e};t.notify("remote-playback-change",r,a)},i=function(t,e){const a=Error(e);return a.code=t,a};var A=Object.freeze({__proto__:null,GoogleCastLoader:class{constructor(){h(this,e),l(this,"name","google-cast"),l(this,"target"),h(this,t)}get cast(){return P()}mediaType(){return"video"}canPlay(t){return m&&!f&&v(t)}async prompt(o){var n;let c,l,h;try{c=await u(this,e,a).call(this,o),p(this,t)||(g=this,m=t,v=new cast.framework.RemotePlayer,d(g,m,"write to private field"),f?f.call(g,v):m.set(g,v),new cast.framework.RemotePlayerController(p(this,t))),l=o.player.createEvent("google-cast-prompt-open",{trigger:c}),o.player.dispatchEvent(l),u(this,e,s).call(this,o,"connecting",l),await u(this,e,r).call(this,w(o.$props.googleCast)),o.$state.remotePlaybackInfo.set({deviceName:null==(n=b())?void 0:n.getCastDevice().friendlyName}),_()&&u(this,e,s).call(this,o,"connected",l)}catch(y){const t=y instanceof Error?y:u(this,e,i).call(this,(y+"").toUpperCase(),"Prompt failed.");throw h=o.player.createEvent("google-cast-prompt-error",{detail:t,trigger:l??c,cancelable:!0}),o.player.dispatch(h),u(this,e,s).call(this,o,_()?"connected":"disconnected",h),t}finally{o.player.dispatch("google-cast-prompt-close",{trigger:h??l??c})}var g,m,v,f}async load(e){if(y)throw Error("[vidstack] can not load google cast provider server-side");if(!p(this,t))throw Error("[vidstack] google cast player was not initialized");return new((await C(async()=>{const{GoogleCastProvider:t}=await import("./vidstack-BeT6vBOi-Du3TsHI_.js");return{GoogleCastProvider:t}},__vite__mapDeps([0,1,2,3,4,5]))).GoogleCastProvider)(p(this,t),e)}}});export{P as getCastContext,S as getCastErrorMessage,b as getCastSession,k as getCastSessionMedia,I as hasActiveCastSession,j as listenCastContextEvent,A as loader};
